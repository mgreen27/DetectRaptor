name: Windows.Detection.MFT
author: Matt Green - @mgreen27
description: |
   Bulk indicator hunt over Windows.NTFS.MFT.

   This artifact is automatically generated by DetectRaptor.

reference:
  - https://github.com/mgreen27/DetectRaptor

type: CLIENT
resources:
  timeout: 9000

parameters:
   - name: DateAfter
     type: timestamp
     description: "search for events after this date. YYYY-MM-DDTmm:hh:ssZ"
   - name: DateBefore
     type: timestamp
     description: "search for events before this date. YYYY-MM-DDTmm:hh:ssZ"
   - name: AllDrives
     type: bool
     description: "Select MFT search on all attached ntfs drives."
   - name: IOCs
     type: csv
     default: |
%(ioc)s  

sources:
  - precondition:
      SELECT OS From info() where OS = 'windows'

    query: |
      -- firsly split IOCs by path or filename focus
      LET all_the_things = SELECT KeywordRegex FROM IOCs WHERE NOT KeywordRegex = '.'
        GROUP BY KeywordRegex
      
      LET hits = SELECT EntryNumber,InUse,OSPath,FileName,FileSize,IsDir, 
            Created0x10,LastModified0x10,LastRecordChange0x10,LastAccess0x10,
            Created0x30,LastModified0x30,LastRecordChange0x30,LastAccess0x30
        FROM Artifact.Windows.NTFS.MFT(
                                FileRegex=join(array=all_the_things.KeywordRegex,sep='|'),
                                DateBefore=DateBefore,
                                DateAfter=DateAfter,
                                AllDrives=AllDrives )

      -- output results and enrich with IOC data
      SELECT * FROM foreach(row=hits,query={
            SELECT 
                dict(
                    Name=Detection,
                    KeywordRegex=KeywordRegex,
                    PathRegex=PathRegex,
                    IgnoreRegex=IgnoreRegex,
                    RegexHit=parse_string_with_regex(string=OSPath,regex='(' + KeywordRegex + ')' ).g1
                    ) as Detection,
                EntryNumber,InUse,OSPath,FileSize,IsDir,
                dict(Created0x10=Created0x10,LastModified0x10=LastModified0x10,LastRecordChange0x10=LastRecordChange0x10,LastAccess0x10=LastAccess0x10) as SITimestamps,
                dict(Created0x30=Created0x30,LastModified0x30=LastModified0x30,LastRecordChange0x30=LastRecordChange0x30,LastAccess0x30=LastAccess0x30) as FNTimestamps
            FROM IOCs
            WHERE FileName =~ KeywordRegex
                AND OSPath =~ PathRegex
                AND NOT if(condition=IgnoreRegex,
                        then= OSPath =~ IgnoreRegex,
                        else= False )
            LIMIT 1
        },workers=20)
        
    notebook:
      - type: vql_suggestion
        name: Detection summary
        template: |
            /*
            ### Detection summary
            */
            
            SELECT Detection.Name, count() AS Total
            FROM source()
            GROUP BY Detection.Name
            ORDER BY Total DESC 
            
      - type: vql_suggestion
        name: Detection filter
        template: |
            /*
            ### Detection filter  
            Use this notebook to modify filter and target specific Detections.
            */
            
            SELECT Fqdn,
                Detection.Name as Detection,
                Detection.RegexHit as RegexHit,
                Detection.PathRegex as PathRegex,
                Detection.FileRegex as FileRegex,
                OSPath,InUse,IsDir,FileSize,
                SITimestamps.Created0x10 as Created0x10,
                SITimestamps.LastModified0x10 as LastModified0x10,
                FNTimestamps.Created0x30 as Created0x30,
                FNTimestamps.LastModified0x30 as LastModified0x30
            FROM source()
            WHERE Detection =~ 'Defense Evasion Binaries|RMM'

      - type: vql_suggestion
        name: Detection folder grouping
        template: |
            /*
            ### Detection folder grouping  
            Use this notebook to modify group by folder and figure out ignore list filters
            */
            
            SELECT Fqdn,
                Detection.Name as Detection,
                Detection.RegexHit as RegexHit,
                Detection.PathRegex as PathRegex,
                Detection.FileRegex as FileRegex,
                OSPath as OSPathExample,
                if(condition= IsDir,
                    then= OSPath, else=dirname(path=OSPath)) as Directory,
                count() as Total
            FROM source()
            WHERE Detection =~ 'Defense Evasion Binaries|RMM'
                --AND NOT OSPath =~ '''ADD HERE'''
            GROUP BY Fqdn,Detection,Directory
