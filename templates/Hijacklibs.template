name: Windows.Detection.HijackLibsMFT
author: Matt Green - @mgreen27
description: |
   Bulk indicator hunt over Windows.NTFS.MFT for potential hijacked dlls.
   
   The artifact is automatically generated by DetectRaptor with an API extract 
   of Hijacklibs not including environment variable examples.
   
   The artifact searches for DllName, then excludes expected path. Untrusted 
   Authenticode or entries without a subject reference to Vendor are in scope.
   
   Expect false positives, context fields have also been included for scoping.

reference:
  - https://github.com/mgreen27/DetectRaptor
  - https://hijacklibs.net/

type: CLIENT
resources:
  timeout: 9000

parameters:
   - name: GlobalPathExclusions
     type: regex
     description: a global exclusion regex for dll paths
     default:  'C:\\\<Err\>\\|C:\\Windows\\(SoftwareDistribution|WinSxS|Servicing|assembly\\NativeImage)\\'
   - name: AllCsv
     type: hidden
     default: |
%splitme% 

sources:
  - precondition:
      SELECT OS From info() where OS = 'windows'

    query: |
      LET IocCsv <= SELECT * FROM parse_csv(filename=AllCsv,accessor='data') 
    
      LET dllname_hits = SELECT EntryNumber,InUse,ParentEntryNumber,
            regex_replace(source=OSPath,re='''^\\\\\.\\''',replace='') as OSPath, 
            FileName, FileSize,ReferenceCount,SI_Lt_FN,uSecZeros,
            LastModified0x10,LastAccess0x10,LastRecordChange0x10,Created0x10,
            LastModified0x30,LastAccess0x30,LastRecordChange0x30,Created0x30
        FROM Artifact.Windows.NTFS.MFT(FileRegex='^(' + join(array=IocCsv.DllName,sep='|') + ')$')
        WHERE NOT OSPath =~ GlobalPathExclusions
      
      LET hits= SELECT * FROM foreach(row=dllname_hits,query={
            SELECT 
                OSPath, FileName, FileSize,ReferenceCount,SI_Lt_FN,uSecZeros,
                EntryNumber,InUse,ParentEntryNumber,
                dict(
                    LastModified0x10=LastModified0x10,
                    LastAccess0x10=LastAccess0x10,
                    LastRecordChange0x10=LastRecordChange0x10,
                    Created0x10=Created0x10 ) AS TimestampsSI,
                dict(
                    LastModified0x30=LastModified0x30,
                    LastAccess0x30=LastAccess0x30,
                    LastRecordChange0x30=LastRecordChange0x30,
                    Created0x30=Created0x30 ) AS TimestampsFN,
                dict(DllName=DllName,Vendor=Vendor,ExpectedLocation=ExpectedLocation,ExecutablePath=ExecutablePath,Type=Type,ExecutableSHA256=ExecutableSHA256,Url=Url) as HijackLibInfo
            FROM IocCsv
            WHERE FileName =~ DllName
                AND NOT OSPath =~ ExpectedLocation
      }, workers = 20 )

      SELECT HijackLibInfo,
            OSPath, FileName, FileSize,
            parse_pe(file=OSPath) AS DllInfo,
            authenticode(filename=OSPath) AS DllAuthenticode,
            hash(path=OSPath) as DllHash,
            { SELECT OSPath FROM glob(root=dirname(path=OSPath),globs='*')} as Folder
        FROM hits
        WHERE Folder AND DllInfo AND DllAuthenticode
            AND ( NOT DllAuthenticode.Trusted = 'trusted' 
                OR NOT DllAuthenticode.SubjectName =~ HijackLibInfo.Vendor )
            AND NOT (  DllInfo.VersionInformation.CompanyName =~ HijackLibInfo.Vendor
                OR DllInfo.VersionInformation.LegalCopyright =~ HijackLibInfo.Vendor
                OR DllInfo.VersionInformation.ProductName =~ HijackLibInfo.Vendor
                OR DllInfo.VersionInformation.OriginalFilename =~ HijackLibInfo.DllName
                OR DllInfo.VersionInformation.OriginalFilename =~ HijackLibInfo.DllName )

    notebook:
      - type: vql_suggestion
        name: Data and field reduction
        template: |
            /*
            ## Data and field reduction
            Commonly side loading threats are deployed only with barebones files
            to enable execution. This notebook only shows hits that have less 
            than 6 files and both an exe and dll in the parent folder.  
            
            Modify as needed.
            */
            LET find_pe_folder(data) = SELECT split(string=_value, sep='\\.')[-1] as ext
              FROM foreach(
                row=data)
              WHERE _value =~ '\\.(exe|dll)$'
              GROUP BY ext
              
            SELECT
                HijackLibInfo,
                Fqdn, --ClientId,
                OSPath,
                FileSize,
                DllAuthenticode.Trusted AS DllTrust,
                DllHash.SHA1 AS DllSHA1,
                TimestampsSI.Created0x10 AS Created0x10,
                TimestampsFN.Created0x30 AS Created0x30,
                TimestampsSI.LastModified0x10 AS LastModified0x10,
                TimestampsFN.LastModified0x30 AS LastModified0x30,
                Folder
                --label(client_id=ClientId, labels=['threat2023MMDD'], op='set') AS labelme
            FROM source()
            WHERE len(list=Folder) < 6
                AND len(list=find_pe_folder(data=Folder).ext) = 2
