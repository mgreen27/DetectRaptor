name: Windows.Detection.Bootloaders
author: Matt Green - @mgreen27
description: |
   This artifact collects EFI files with matching SHA256 hashes in the
   the Bootloaders project.

   The artifact is automatically generated by DetectRaptor with an API 
   extract of Bootloaders.io entries.

   NOTE: artifact requires FAT accessor availible in Velociraptor 0.71

reference:
  - https://github.com/mgreen27/DetectRaptor
  - https://www.bootloaders.io/

type: CLIENT

parameters:
  - name: ImagePath
    default: "\\\\.\\PhysicalDrive0"
    description: Raw Device for main disk containing partition table to parse.
  - name: SectorSize
    type: int
    default: 512
  - name: TargetGlob
    default: "**/*.efi"
  - name: IOCs
    type: hidden
    default: |
%splitme%

sources:
- query: |
      LET IOCcsv <= SELECT Name,Category,Filename,MachineType,
            lowcase(string=SHA256) as SHA256,
            lowcase(string=AuthentiSHA256) as AuthentiSHA256,
            BootloadersUrl
        FROM parse_csv(accessor='data',filename=IOCs)
      
      LET efi = SELECT ImagePath,StartOffset,EndOffset, 
            Size AS PartitionSize,
            name,TopLevelDirectory,
            Magic
        FROM Artifact.Windows.Forensics.PartitionTable(
            ImagePath=ImagePath, SectorSize=SectorSize )
        WHERE name =~ "EFI"
    
      LET hits = SELECT * FROM foreach(row=efi, 
            query={
                SELECT 
                    dict(
                        ImagePath=ImagePath,
                        StartOffset=StartOffset,
                        EndOffset=EndOffset,
                        Size=PartitionSize,
                        TopLevelDirectory=TopLevelDirectory,
                        Magic=Magic
                        ) as PartitionInfo,
                    OSPath.Path AS OSPath, 
                    name as Name, Size, 
                    Mtime, Atime, Ctime, Btime,
                    Data.first_cluster as FirstCluster,
                    Data.attr AS Attr,
                    Data.deleted as IsDeleted,
                    Data.short_name AS ShortName,
                    parse_pe(accessor='fat',file=OSPath) as PEInfo,
                    magic(accessor='fat',path=OSPath) as Magic,
                    authenticode(accessor='fat',filename=OSPath) as Authenticode,
                    hash(accessor='fat',path=OSPath) as Hash
                FROM glob(globs=TargetGlob,
                            accessor="fat",
                            root=pathspec(
                                DelegateAccessor="offset",
                                DelegatePath=pathspec(
                                   DelegateAccessor="raw_file",
                                   DelegatePath=ImagePath,
                                   Path=format(format="%d", args=StartOffset))))
                WHERE lowcase(string=Hash.SHA256) in IOCcsv.SHA256
                    OR lowcase(string=PEInfo.AuthenticodeHash.SHA256) in IOCcsv.AuthentiSHA256
                })
    
      SELECT * FROM foreach(row= hits,
        query={
            SELECT 
                dict(
                    Name=Name,
                    Category=Category,
                    Filename=Filename,
                    MachineType=MachineType,
                    SHA256=SHA256,
                    AuthentiSHA256=AuthentiSHA256,
                    BootloadersUrl=BootloadersUrl
                ) as Detection,
                PartitionInfo,
                OSPath,Size,
                Mtime,Atime,Ctime,Btime,
                FirstCluster,Attr,IsDeleted,
                PEInfo,Authenticode,Hash
            FROM IOCcsv
            WHERE lowcase(string=Hash.SHA256) = SHA256
               OR lowcase(string=PEInfo.AuthenticodeHash.SHA256) = AuthentiSHA256
        })

- name: StandardDisk
  query: |
      LET hits = SELECT OSPath,Size,Mtime,Atime,Ctime,Btime,
            parse_pe(file=OSPath) as PEInfo,
            magic(path=OSPath) as Magic,
            authenticode(filename=OSPath) as Authenticode,
            hash(path=OSPath) as Hash
        FROM glob(globs=TargetGlob)
        WHERE lowcase(string=Hash.SHA256) in IOCcsv.SHA256
            OR lowcase(string=PEInfo.AuthenticodeHash.SHA256) in IOCcsv.AuthentiSHA256
        
      SELECT * FROM foreach(row= hits,
        query={
            SELECT 
                dict(
                    Name=Name,
                    Category=Category,
                    Filename=Filename,
                    MachineType=MachineType,
                    SHA256=SHA256,
                    AuthentiSHA256=AuthentiSHA256,
                    BootloadersUrl=BootloadersUrl
                ) as Detection,
                OSPath,Size,
                Mtime,Atime,Ctime,Btime,
                PEInfo,Authenticode,Hash
            FROM IOCcsv
            WHERE lowcase(string=Hash.SHA256) = SHA256
               OR lowcase(string=PEInfo.AuthenticodeHash.SHA256) = AuthentiSHA256
        })