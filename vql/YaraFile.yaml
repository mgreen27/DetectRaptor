name: Generic.Detection.YaraFile
author: Matt Green - @mgreen27
description: |
  This artifact is a bulk yara file hunt.

  Yara generated for this artifact is automatically generated by DetectRaptor.
  Default yara set extracts all Yara-Forge FILE based rules.
   
  NOTE: 
  
  - this artifact by default targets whole disk. This can be resource intensive. 
  It is reccomended to target queries if possible.
  - this artifact runs the glob plugin with the nosymlink switch turned on. This 
  will NOT follow any symlinks and may cause unexpected results if unknowingly 
  targeting a folder with symlinks.
  - This artifact uses compiled rules. Additional rule context can be found at
  https://github.com/mgreen27/DetectRaptor/blob/master/yara/yara-rules-full.yar
  
  Some examples of path glob may include:

    - Specific binary: ```/usr/bin/ls```
    - Wildcards: ```/var/www/*.js```
    - More wildcards: ```/var/www/**/*.js```
    - Multiple extentions: ```/var/www/*.{php,aspx,js,html}```
    - Windows: ```C:/Users/**/*.{exe,dll,ps1,bat}```
    - Windows: ```C:\Users\**\*.{exe,dll,ps1,bat}```

reference:
  - https://github.com/mgreen27/DetectRaptor
  - https://github.com/YARAHQ/yara-forge
  - https://github.com/mgreen27/DetectRaptor/blob/master/yara/yara-rules-full.yar

tools:
  - name: FileYaraWindows
    url: https://github.com/mgreen27/DetectRaptor/raw/master/yara/full_windows_file.yar.gz
    serve_locally: true
  - name: FileYaraLinux
    url: https://github.com/mgreen27/DetectRaptor/raw/master/yara/full_linux_file.yar.gz
    serve_locally: true
  - name: FileYaraMacOS
    url: https://github.com/mgreen27/DetectRaptor/raw/master/yara/full_macos_file.yar.gz
    serve_locally: true


type: CLIENT
parameters:
  - name: PathGlob
    description: Only file names that match this glob will be scanned.
    default: "**/*"
  - name: NumberOfHits
    description: This artifact will stop by default at one hit. This setting allows additional hits
    default: 1
    type: int
  - name: ContextBytes
    description: Include this amount of bytes around hit as context.
    default: 0
    type: int
  - name: UploadHits
    type: bool

sources:
  - query: |
      LET host_info <= SELECT OS FROM info()
      LET ToolName =    if(condition= host_info[0].OS=~'Windows', 
                            then= 'FileYaraWindows',
                            else=   
                        if(condition= host_info[0].OS=~'Linux', 
                            then= 'FileYaraLinux',
                            else=
                        if(condition= host_info[0].OS=~'darwin',
                            then= 'FileYaraMacOS' )))
      LET Length =    if(condition= host_info[0].OS=~'Windows', 
                            then= 30000000,
                            else=   
                        if(condition= host_info[0].OS=~'Linux', 
                            then= 2000000,
                            else=
                        if(condition= host_info[0].OS=~'darwin',
                            then= 1000000 )))
                            
      LET rules <= SELECT OSPath FROM Artifact.Generic.Utils.FetchBinary(
                ToolName=ToolName,
                IsExecutable='N' )
      
      -- first find all matching glob
      LET files = SELECT OSPath FROM glob(globs=PathGlob,nosymlink='True')
        WHERE
          NOT IsDir AND NOT IsLink

      -- scan files and prepare hit metadata
      LET hits = SELECT 
            FileName as OSPath,
            File.Size as Size,
            File.Mtime as Mtime, 
            File.Atime as Atime, 
            File.Ctime as Ctime, 
            File.Btime as Btime,
            Rule, Tags,
            Meta,
            String.Name as YaraString,
            String.Offset as HitOffset,
            String.Data as HitContext
        FROM yara(
                rules=read_file(filename=rules[0].OSPath,accessor='gzip',length=Length),
                files=files.OSPath,
                context=ContextBytes,
                number=NumberOfHits )

      -- upload files if selected
      LET upload_hits = SELECT *, upload(file=OSPath,name=OSPath) as Upload 
        FROM hits

      -- return rows
      SELECT * FROM if(condition= UploadHits,
                        then= upload_hits,
                        else= hits )

column_types:
  - name: HitContext
    type: base64
  - name: Upload
    type: preview_upload
