name: DetectRaptor.Server.StartHunts
author: Matt Green - @mgreen27
description: |
    This is an automatically generated artifact that can be used to execute 
    DetectRaptor hunts.

    Use the ArtifactRegex filter for targeting.  
    If Timeout, CpuLimit or IopsLimit is blank, the artifact default will be used.

reference:
  - https://github.com/mgreen27/DetectRaptor
type: SERVER

parameters:
  - name: ArtifactRegex
    description: regex filter to target artifact name
    default: .
    type: regex
  - name: TestTargeting
    description: If selected only report hunts to target
    type: bool
  - name: JustRun
    description: If selected do not start start paused. Warning - Will Run all selected hunts!
    type: bool
  - name: HuntList
    type: csv
    default: |
        Artifact,Tag,Timeout,CpuLimit,IopsLimit
        DetectRaptor.Generic.Detection.YaraWebshell,,,,
        DetectRaptor.Windows.Detection.YaraProcessWin,,,,
        DetectRaptor.Windows.Detection.MFT,,,,
        DetectRaptor.Windows.Detection.Amcache,,,,
        DetectRaptor.Macos.Detection.YaraProcessMacos,,,,
        DetectRaptor.Windows.Detection.LolDriversVulnerable,,,,
        DetectRaptor.Windows.Detection.BinaryRename,,,,
        DetectRaptor.Windows.Detection.Bootloaders,,,,
        DetectRaptor.Windows.Detection.HijackLibsMFT,,,,
        DetectRaptor.Windows.Detection.Evtx,,,,
        DetectRaptor.Windows.Detection.LolDriversMalicious,,,,
        DetectRaptor.Linux.Detection.YaraProcessLinux,,,,
        DetectRaptor.Generic.Detection.YaraFile,,,,
        DetectRaptor.Windows.Detection.Powershell.PSReadline,,,,
        DetectRaptor.Windows.Detection.ZoneIdentifier,,,,
        DetectRaptor.Windows.Detection.NamedPipes,,,,
        DetectRaptor.Windows.Detection.Yara.LolDrivers,,,,
        DetectRaptor.Windows.Registry.NetworkProvider,,,,
        DetectRaptor.Windows.Detection.HijackLibsEnv,,,,
        DetectRaptor.Windows.Detection.Powershell.ISEAutoSave,,,,
        DetectRaptor.Windows.Detection.Applications,,,,
        DetectRaptor.Windows.Detection.Webhistory,,,,
        DetectRaptor.Windows.Detection.LolRMM,,,,
 

sources:
  - query: |
      SELECT 
        Artifact,
        if(condition= TestTargeting,
            then= 'Only testing',
            else= hunt(
                    timeout=int(int=Timeout),
                    cpu_limit=int(int=CpuLimit),
                    iops_limit=int(int=IopsLimit),
                    artifacts= [Artifact],
                    description = regex_replace(source=
                                    Artifact + if(condition=Tag, 
                                                    then=' - ' + Tag,
                                                    else= ''),
                                                re='^DetectRaptor\.',
                                                replace='DetectRaptor: '),
                    pause=if(condition= JustRun,
                            then= Null,
                            else= 'Y' ) 
                )) as RunHunt
      FROM HuntList
      WHERE Artifact =~ ArtifactRegex
